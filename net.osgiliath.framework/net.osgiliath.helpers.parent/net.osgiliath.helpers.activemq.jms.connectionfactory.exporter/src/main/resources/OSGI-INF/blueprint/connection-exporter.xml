<!-- #%L net.osgiliath.helpers.activemq.jms.connectionfactory.exporter %% 
	Copyright (C) 2013 Osgiliath corp %% Licensed under the Apache License, Version 
	2.0 (the "License"); you may not use this file except in compliance with 
	the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. 
	#L% -->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
	xmlns:amq="http://activemq.apache.org/schema/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd">
	<cm:property-placeholder persistent-id="amqconfig"
		id="amqconfig" placeholder-prefix="$[" placeholder-suffix="]">
		<cm:default-properties>
			<cm:property name="stompTransportConnector.uri" value="stomp://0.0.0.0:61613" />
			<cm:property name="jmsTransportConnector.uri" value="tcp://0.0.0.0:61616" />
			<cm:property name="webSocketTransportConnector.uri" value="ws://0.0.0.0:61614" />
			<cm:property name="jmsXATransportConnector.uri" value="tcp://0.0.0.0:61626" />
			<cm:property name="webSocketXATransportConnector.uri" value="ws://0.0.0.0:61624" />
			<cm:property name="stompXATransportConnector.uri" value="stomp://0.0.0.0:61623" />
		</cm:default-properties>
	</cm:property-placeholder>
	<reference id="osgiPlatformTransactionManager"
		interface="org.springframework.transaction.PlatformTransactionManager" />
	<!-- access through JTATransactionManager -->
	<reference id="osgiJtaTransactionManager" interface="javax.transaction.TransactionManager" />
	<amq:broker brokerName="brokerB1" shutdownOnMasterFailure="true">
		<amq:destinationPolicy>
			<amq:policyMap>
				<amq:policyEntries>
					<amq:policyEntry queue=">" producerFlowControl="true"
						memoryLimit="5mb">
						<amq:deadLetterStrategy>
							<amq:individualDeadLetterStrategy
								queuePrefix="DLQ." useQueueForQueueMessages="true" />
						</amq:deadLetterStrategy>
					</amq:policyEntry>
				</amq:policyEntries>
			</amq:policyMap>
		</amq:destinationPolicy>
		<amq:managementContext>
			<amq:managementContext createConnector="false" />
		</amq:managementContext>
		<amq:persistenceAdapter>
			<amq:kahaDB directory="activeMQ/kahadb-jms"
				enableJournalDiskSyncs="false" indexWriteBatchSize="10000"
				indexCacheSize="1000" />
		</amq:persistenceAdapter>
		<amq:plugins>
			<amq:loggingBrokerPlugin />
		</amq:plugins>
		<amq:systemUsage>
			<amq:systemUsage>
				<amq:memoryUsage>
					<amq:memoryUsage limit="420 mb" />
				</amq:memoryUsage>
				<amq:storeUsage>
					<amq:storeUsage limit="1 gb" />
				</amq:storeUsage>
				<amq:tempUsage>
					<amq:tempUsage limit="250 mb" />
				</amq:tempUsage>
			</amq:systemUsage>
		</amq:systemUsage>
		<amq:transportConnectors>
			<!-- stomp (from/to web) -->
			<amq:transportConnector name="stomp"
				uri="$[stompTransportConnector.uri]" />
			<!-- websocket (stomp underlay) -->
			<amq:transportConnector name="websocket"
				uri="$[webSocketTransportConnector.uri]" />
			<!-- jms -->
			<amq:transportConnector name="tcp"
				uri="$[jmsTransportConnector.uri]" />
			<!-- Transactionnal websocket -->
			<amq:transportConnector name="websocketXA"
				uri="$[webSocketXATransportConnector.uri]" />
			<!-- jms xa -->
			<amq:transportConnector name="tcpXA"
				uri="$[jmsXATransportConnector.uri]" />
		</amq:transportConnectors>
	</amq:broker>
	<!-- JMS and stomp ConnectionFactories to use, configuring the embedded 
		broker using XML <amq:connectionFactory id="jmsFactory" brokerURL="$[jmsTransportConnector.uri]" 
		/> <amq:connectionFactory id="webSocketFactory" brokerURL="$[webSocketTransportConnector.uri]" 
		/> <amq:connectionFactory id="stompConnectionFactory" brokerURL="$[stompTransportConnector.uri]" 
		/> <amq:xaConnectionFactory id="jmsXAFactory" brokerURL="$[jmsXATransportConnector.uri]" 
		/> <amq:xaConnectionFactory id="webSocketXAFactory" brokerURL="$[webSocketXATransportConnector.uri]" 
		/> <amq:xaConnectionFactory id="stompXAConnectionFactory" brokerURL="$[stompXATransportConnector.uri]" 
		/> -->
	<bean id="jmsXAFactory" class="org.apache.activemq.ActiveMQXAConnectionFactory">
		<property name="brokerURL" value="$[jmsXATransportConnector.uri]" />
	</bean>
	<!--<bean id="jmsXACachedFactory" class="org.springframework.jms.connection.CachingConnectionFactory"> 
		<property name="sessionCacheSize" value="3" /> <property name="targetConnectionFactory" 
		ref="jmsXAFactory" /> </bean> -->
	<!-- jms confactory -->
	<bean id="jmsFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="$[jmsTransportConnector.uri]" />
	</bean>
	<bean id="cachedJmsConnectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<property name="targetConnectionFactory" ref="jmsFactory" />
		<property name="sessionCacheSize" value="3" />
	</bean>
	<!-- to remove -->
	<bean id="webSocketFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="$[webSocketTransportConnector.uri]" />
	</bean>
	<bean id="cachedWebSocketConnectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<property name="targetConnectionFactory" ref="webSocketFactory" />
		<property name="sessionCacheSize" value="3" />
	</bean>
	<!-- jms connection factory to export -->
	<service ref="cachedJmsConnectionFactory" interface="javax.jms.ConnectionFactory">
		<service-properties>
			<entry key="component-type" value="jms" />
		</service-properties>
	</service>

	<!-- to remove: normally you don't have to use websocket as a transport -->
	<service ref="cachedWebSocketConnectionFactory" interface="javax.jms.ConnectionFactory">
		<service-properties>
			<entry key="component-type" value="websocket" />
		</service-properties>
	</service>

	<!-- JMS XA factory export -->
	<service ref="jmsXAFactory" interface="javax.jms.XAConnectionFactory">
		<service-properties>
			<entry key="component-type" value="jmsXA" />
		</service-properties>
	</service>

	<!-- Camel JMS component -->
	<bean id="camel-jms-component" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="connectionFactory" ref="cachedJmsConnectionFactory"></property>
		<property name="transacted" value="false" />
		<property name="concurrentConsumers" value="5" />
		<property name="maxConcurrentConsumers" value="100" />
		<property name="cacheLevelName" value="CACHE_CONSUMER" />
	</bean>
	<!-- Camel JMS XA component -->
	<bean id="camel-jms-xa-component" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="connectionFactory" ref="jmsXAFactory"></property>
		<property name="transacted" value="true" />
		<property name="transactionManager" ref="osgiPlatformTransactionManager"></property>
		<property name="concurrentConsumers" value="5" />
		<property name="maxConcurrentConsumers" value="100" />
		<property name="cacheLevelName" value="CACHE_NONE" />
	</bean>
	
	
	<!-- OSGI service for camel jms component -->
	<service ref="camel-jms-component" interface="org.apache.camel.Component">
		<service-properties>
			<entry key="component-type" value="jms" />
		</service-properties>
	</service>
	<!-- OSGI service for camel JMS XA component -->
	<service ref="camel-jms-xa-component" interface="org.apache.camel.Component">
		<service-properties>
			<entry key="component-type" value="jmsXA" />
		</service-properties>
	</service>
</blueprint>
