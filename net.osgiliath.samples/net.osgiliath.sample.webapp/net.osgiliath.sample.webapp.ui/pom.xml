<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>net.osgiliath.samples</groupId>
		<artifactId>net.osgiliath.sample.webapp</artifactId>
		<version>0.3.0</version>
	</parent>
	<artifactId>net.osgiliath.sample.webapp.ui</artifactId>
	<name>Helloworld simple sample Interface</name>
	<description>UI module for helloworld simple sample</description>
	<packaging>war</packaging>
	<properties>
		<sonar.language>js</sonar.language>
		<sonar.sources>src/main/javascript</sonar.sources>
		<sonar.tests>src/test/javascript</sonar.tests>
		<sonar.javascript.lcov.reportPath>${basedir}/target/coverage/**/lcov.info</sonar.javascript.lcov.reportPath>
	</properties>
	<build>
		<resources>
			<resource>
				<directory>src/main/javascript</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.js</include>
					<include>**/*.html</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/javascript</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/*.js</exclude>
					<exclude>**/*.html</exclude>
				</excludes>
			</resource>
		</resources>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<sourceFileExcludes>
						<exclude>**/*</exclude>
					</sourceFileExcludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>first</id>
						<goals>
							<goal>update-file-header</goal>
						</goals>
						<phase>process-sources</phase>
						<configuration>
							<licenseName>gpl_v3</licenseName>
							<includes>
								<include>scripts.*</include>
							</includes>
							<excludes>
								<exclude>*</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<skipITs>${skipExec}</skipITs>
					<skipTests>${skipExec}</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<archive>
						<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.servicemix.tooling</groupId>
				<artifactId>depends-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<!-- <fileset> <directory>src/main/javascript/bower_components</directory> </fileset> <fileset> <directory>node_modules</directory> </fileset> -->
						<fileset>
							<directory>target</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-it-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-it-resource</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/it/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>add-js-source</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>add-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/main/javascript</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>add-js-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/test/javascript</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.ops4j.pax.exam</groupId>
				<artifactId>exam-maven-plugin</artifactId>
				<configuration>
					<configClass>exam.conf.StandaloneKarafPaxExamConfiguration</configClass>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>start-container</goal>
							<goal>stop-container</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>net.osgiliath.modules</groupId>
			<version>${project.version}</version>
			<artifactId>net.osgiliath.module.exam</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<version>${project.version}</version>
			<artifactId>${project.parent.artifactId}.business.impl</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<version>${project.version}</version>
			<artifactId>${project.parent.artifactId}.features</artifactId>
			<classifier>features</classifier>
			<type>xml</type>
			<exclusions>
				<exclusion>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.google.guava</groupId><!-- Due to Selenium -->
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- test deps -->
		<dependency>
			<groupId>com.google.guava</groupId><!-- Due to Selenium -->
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-container-karaf</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-junit4</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.url</groupId>
			<artifactId>pax-url-aether</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.karaf</groupId>
			<artifactId>apache-karaf</artifactId>
			<type>zip</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-firefox-driver</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>Unix</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>exec-maven-plugin</artifactId>
							<configuration>
								<skip>${skipExec}</skip>
							</configuration>
							<executions>
								<execution>
									<id>bower-install</id>
									<goals>
										<goal>exec</goal>
									</goals>
									<phase>generate-resources</phase>
									<configuration>
										<executable>bower</executable>
										<workingDirectory>${project.basedir}</workingDirectory>
										<arguments>
											<argument>--no-color</argument>
											<argument>install</argument>
										</arguments>
									</configuration>
								</execution>
								<execution>
									<id>npm-install</id>
									<goals>
										<goal>exec</goal>
									</goals>
									<phase>generate-resources</phase>
									<configuration>
										<executable>npm</executable>
										<workingDirectory>${project.basedir}</workingDirectory>
										<arguments>
											<argument>install</argument>
										</arguments>
									</configuration>
								</execution>
								<execution>
									<id>grunt-test</id>
									<goals>
										<goal>exec</goal>
									</goals>
									<phase>test</phase>
									<configuration>
										<executable>grunt</executable>
										<workingDirectory>${project.basedir}</workingDirectory>
										<arguments>
											<argument>test</argument>
										</arguments>
									</configuration>
								</execution>
								<execution>
									<id>grunt-package</id>
									<goals>
										<goal>exec</goal>
									</goals>
									<phase>compile</phase>
									<configuration>
										<executable>grunt</executable>
										<workingDirectory>${project.basedir}</workingDirectory>
										<arguments>
											<argument>build</argument>
										</arguments>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<id>Win</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>exec-maven-plugin</artifactId>
							<configuration>
								<skip>${skipExec}</skip>
							</configuration>
							<executions>
								<execution>
									<id>bower-install</id>
									<goals>
										<goal>exec</goal>
									</goals>
									<phase>generate-resources</phase>
									<configuration>
										<executable>bower.cmd</executable>
										<workingDirectory>${project.basedir}</workingDirectory>
										<arguments>
											<argument>--no-color</argument>
											<argument>install</argument>
										</arguments>
									</configuration>
								</execution>
								<execution>
									<id>npm-install</id>
									<goals>
										<goal>exec</goal>
									</goals>
									<phase>generate-resources</phase>
									<configuration>
										<executable>npm.cmd</executable>
										<workingDirectory>${project.basedir}</workingDirectory>
										<arguments>
											<argument>install</argument>
										</arguments>
									</configuration>
								</execution>
								<execution>
									<id>grunt-test</id>
									<goals>
										<goal>exec</goal>
									</goals>
									<phase>test</phase>
									<configuration>
										<executable>grunt.cmd</executable>
										<workingDirectory>${project.basedir}</workingDirectory>
										<arguments>
											<argument>test</argument>
										</arguments>
									</configuration>
								</execution>
								<execution>
									<id>grunt-package</id>
									<goals>
										<goal>exec</goal>
									</goals>
									<phase>compile</phase>
									<configuration>
										<executable>grunt.cmd</executable>
										<workingDirectory>${project.basedir}</workingDirectory>
										<arguments>
											<argument>build</argument>
										</arguments>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>
</project>