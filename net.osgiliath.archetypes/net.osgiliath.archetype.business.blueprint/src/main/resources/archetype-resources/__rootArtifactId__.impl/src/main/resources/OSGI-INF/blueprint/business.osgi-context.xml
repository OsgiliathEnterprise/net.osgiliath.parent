#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- ${symbol_pound}%L net.osgiliath.hello.business.impl %% Copyright (C) 2013 Osgiliath 
	%% Licensed under the Apache License, Version 2.0 (the "License"); you may 
	not use this file except in compliance with the License. You may obtain a 
	copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless 
	required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. 
	${symbol_pound}L% -->

<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:tx="http://aries.apache.org/xmlns/transactions/v1.1.0"
	xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs" xmlns:cxf="http://cxf.apache.org/blueprint/core"
	xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
	xmlns:camel="http://camel.apache.org/schema/blueprint" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd
	http://aries.apache.org/xmlns/transactions/v1.1.0 http://aries.apache.org/schemas/transaction/transactionv11.xsd
	http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
	http://cxf.apache.org/blueprint/jaxrs http://cxf.apache.org/schemas/blueprint/jaxrs.xsd
	http://cxf.apache.org/blueprint/core http://cxf.apache.org/schemas/blueprint/core.xsd
	 http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

	<cm:property-placeholder persistent-id="cxfconfig"
		id="cxfconfig" placeholder-prefix="${symbol_dollar}[" placeholder-suffix="]" />
	<!-- TODO we expose this service as an OSGI one in order to make pax-exam 
		aware of the deplyement -->
	<!-- TODO your OSGI service references here (if you don't use annotations 
		via MANIFEST) -->
	<reference id="transactionManager"
		interface="org.springframework.transaction.PlatformTransactionManager"></reference>
	<reference id="jTATransactionManager" interface="javax.transaction.TransactionManager"></reference>
	<reference id="validatorFactory" interface="javax.validation.ValidatorFactory"
		availability="mandatory" />
	<reference id="jms" interface="org.apache.camel.Component"
		availability="mandatory" filter="(component-type=jms)">
	</reference>
	<reference id="jmsXA" interface="org.apache.camel.Component"
		filter="(component-type=jmsXA)">
	</reference>
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"
		factory-ref="validatorFactory" factory-method="getValidator" />
	<!-- TODO remove this REST declaration of the service -->
	<!-- <bean id="helloServiceJaxRs"
		class="${package}.services.impl.HelloServiceJaxRS">
		<property name="helloObjectRepository" ref="helloObjectRepository"></property>
	</bean> -->
	<!-- TODO remove declaration if you don't use JMS -->
	<camel:camelContext id="camelCtx">
	</camel:camelContext>
	<!-- TODO remove this declaration -->
	<!-- <bean id="helloServiceJMS"
		class="${package}.impl.services.impl.HelloServiceJMS">
		<property name="helloObjectRepository" ref="helloObjectRepository"></property>
		<property name="validator" ref="validator"></property>
	</bean>
 -->
	<bean id="jaxbProvider" class="org.apache.cxf.jaxrs.provider.JAXBElementProvider" />
	<bean id="jsonProvider" class="org.apache.cxf.jaxrs.provider.json.JSONProvider" />
		<!-- Swagger API listing resource -->
	<bean id="swaggerResourceJSON"
		class="com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON" />
	<!-- Swagger writers -->
	<bean id="resourceWriter"
		class="com.wordnik.swagger.jaxrs.listing.ResourceListingProvider" />
	<bean id="apiWriter"
		class="com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider" />
	
	<!-- TODO modify this REST web service declaration -->
	 <jaxrs:server id="helloServiceCXF" address="/${symbol_dollar}{artifactId}Service">
		<jaxrs:serviceBeans>
			<!--<ref component-id="helloServiceJaxRs" />-->
			<ref component-id="swaggerResourceJSON" />
		</jaxrs:serviceBeans>
		<jaxrs:providers>
			<ref component-id="jaxbProvider" />
			<ref component-id="jsonProvider" />
			<ref component-id="resourceWriter" />
			<ref component-id="apiWriter" />
			<bean id="validationException"
				class="helpers.cxf.exception.handling.jaxrs.mapper.ExceptionXmlMapper" />
		</jaxrs:providers>
	</jaxrs:server> 
	<bean id="swaggerConfig" class="com.wordnik.swagger.jaxrs.config.BeanConfig">
		<property name="resourcePackage" value="${symbol_dollar}{artifactId}" />
		<property name="version" value="${symbol_dollar}{project.version}" />
		<property name="basePath" value="${symbol_dollar}[jaxrs.server.protocol]://${symbol_dollar}[jaxrs.server.uri]:${symbol_dollar}[jaxrs.server.port]/cxf/${symbol_dollar}{artifactId}Service" />
		<property name="title" value="${symbol_dollar}{project.name}" />
		<property name="description" value="${symbol_dollar}{project.description}" />
		<property name="contact" value="masterdev@wondermail.org" />
		<property name="license" value="Apache Licence 2.0" />
		<property name="licenseUrl"
			value="http://www.apache.org/licenses/LICENSE-2.0.html" />
		<property name="scan" value="true" />
	</bean>
	<cxf:bus>
		<cxf:features>
			<cxf:logging />
		</cxf:features>
	</cxf:bus>

	<!-- Example using security feature <service ref="authenticationManager" 
		interface="org.springframework.security.authentication.AuthenticationManager" 
		/> <bean id="repositoryUserDetailsService" class="net.osgiliath.security.manager.internal.RepositoryUserDetailsService"> 
		<tx:transaction method="*" value="Required" /> <property name="userModelJaxRSServerUrlRetriever" 
		ref="userModelJaxRSServerUrlRetriever" /> </bean> <bean class="org.springframework.security.authentication.dao.DaoAuthenticationProvider" 
		id="authenticationProvider"> <property name="userDetailsService" ref="repositoryUserDetailsService" 
		/> <property name="passwordEncoder" ref="passwordEncoder"></property> <property 
		name="saltSource" ref="saltSource"></property> </bean> <bean id="loginPasswordSecurityService" 
		class="net.osgiliath.security.manager.internal.LoginPasswordSecurityService"> 
		<tx:transaction method="*" value="Required" /> <property name="authenticationManager" 
		ref="authenticationManager"></property> <property name="passwordEncoder" 
		ref="passwordEncoder"></property> <property name="saltSource" ref="saltSource"></property> 
		<property name="validator" ref="validator"></property> <property name="userModelJaxRSServerUrlRetriever" 
		ref="userModelJaxRSServerUrlRetriever"/> </bean> <bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource"> 
		<property name="userPropertyToUse" value="pseudo"></property> </bean> <bean 
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" 
		id="passwordEncoder"> <argument value="512"></argument> <property name="encodeHashAsBase64" 
		value="true"></property> </bean> <bean class="org.springframework.security.authentication.ProviderManager" 
		id="authenticationManager"> <argument> <list> <ref component-id="authenticationProvider" 
		/> </list> </argument> </bean> -->


</blueprint>
